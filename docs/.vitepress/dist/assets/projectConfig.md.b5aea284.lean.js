import{_ as n,c as s,o as a,d as t}from"./app.671a210c.js";const m='{"title":"package.json","description":"","frontmatter":{},"headers":[{"level":2,"title":"package.json","slug":"package-json"},{"level":2,"title":"scripts/dev.js","slug":"scripts-dev-js"},{"level":2,"title":"rollup.config.js","slug":"rollup-config-js"}],"relativePath":"projectConfig.md","lastUpdated":1638679816766}',p={},o=t(`__VP_STATIC_START__<h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h2><p>\u90A3\u4E48\u901A\u8FC7run dev\u5982\u4F55\u6253\u5305\u51FA<code>vue/dist/vue.global.js</code>\u5462\uFF1F \u5148\u770B<code>package.json</code></p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;private&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3.2.23&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/dev.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/build.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;run-s size-global size-baseline&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size-global&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/build.js vue runtime-dom -f global -p&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size-baseline&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/build.js runtime-dom runtime-core reactivity shared -f esm-bundler &amp;&amp; cd packages/size-check &amp;&amp; vite build&quot;</span><span class="token punctuation">,</span>
    ...
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  ...
<span class="token punctuation">}</span>
</code></pre></div><h2 id="scripts-dev-js" tabindex="-1">scripts/dev.js <a class="header-anchor" href="#scripts-dev-js" aria-hidden="true">#</a></h2><p><code>npm run dev</code> \u6267\u884C\u7684\u662F<code>scripts/dev.js</code>\uFF0C\u6CA1\u6709\u4F20\u4EFB\u4F55\u7684\u73AF\u5883\u53D8\u91CF\u3002\u63A5\u4E0B\u6765\u5C31\u662F\u6253\u5F00\u5BF9\u5E94\u7684<code>scripts/dev.js</code>\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> execa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;execa&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> fuzzyMatchTarget <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./utils&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;minimist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> target <span class="token operator">=</span> args<span class="token punctuation">.</span>_<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token function">fuzzyMatchTarget</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">const</span> formats <span class="token operator">=</span> args<span class="token punctuation">.</span>formats <span class="token operator">||</span> args<span class="token punctuation">.</span>f
<span class="token keyword">const</span> sourceMap <span class="token operator">=</span> args<span class="token punctuation">.</span>sourcemap <span class="token operator">||</span> args<span class="token punctuation">.</span>s
<span class="token keyword">const</span> commit <span class="token operator">=</span> execa<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token string">&#39;git&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;rev-parse&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HEAD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>

<span class="token function">execa</span><span class="token punctuation">(</span>
  <span class="token string">&#39;rollup&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token string">&#39;-wc&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;--environment&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">COMMIT:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>commit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TARGET:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">FORMATS:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formats <span class="token operator">||</span> <span class="token string">&#39;global&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      sourceMap <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SOURCE_MAP:true</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">]</span>
      <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    stdio<span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre></div><p>\u56E0\u4E3A\u6211\u4EEC\u5728\u6267\u884C<code>run dev</code>\u7684\u65F6\u5019\u6CA1\u6709\u4F20\u4EFB\u4F55\u7684\u53C2\u6570\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7684<code>args</code>\u7684\u503C\u662F\u8FD9\u6837\u7684 <code>{_: []}</code>\u3002 \u6240\u4EE5\u4E0B\u9762\u7684\u503C\u5C31\u5F88\u6E05\u6670\u4E86</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> fuzzyMatchTarget <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./utils&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;minimist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// {_: []}</span>
<span class="token keyword">const</span> target <span class="token operator">=</span> args<span class="token punctuation">.</span>_<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token function">fuzzyMatchTarget</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span>    <span class="token comment">// &#39;vue&#39;</span>
<span class="token keyword">const</span> formats <span class="token operator">=</span> args<span class="token punctuation">.</span>formats <span class="token operator">||</span> args<span class="token punctuation">.</span>f  <span class="token comment">// undefined</span>
<span class="token keyword">const</span> sourceMap <span class="token operator">=</span> args<span class="token punctuation">.</span>sourcemap <span class="token operator">||</span> args<span class="token punctuation">.</span>s  <span class="token comment">// undefined</span>
<span class="token keyword">const</span> commit <span class="token operator">=</span> execa<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token string">&#39;git&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;rev-parse&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HEAD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u662F\u52A8\u6001\u83B7\u53D6git\u6700\u8FD1\u4E00\u6B21commit\u751F\u6210\u76848\u4F4D\u968F\u673A\u7801</span>

</code></pre></div><p>\u6240\u4EE5\u6700\u7EC8\u7684\u6267\u884C\u5185\u5BB9\u662F\u8FD9\u6837\u7684</p><div class="language-javascript"><pre><code><span class="token function">execa</span><span class="token punctuation">(</span>
  <span class="token string">&#39;rollup&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token string">&#39;-wc&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;--environment&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">COMMIT:2d4f4554</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TARGET:vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">FORMATS:&#39;global&#39;,
      </span><span class="token template-punctuation string">\`</span></span>\`
    <span class="token punctuation">]</span>
      <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    stdio<span class="token operator">:</span> <span class="token string">&#39;inherit&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre></div><h2 id="rollup-config-js" tabindex="-1">rollup.config.js <a class="header-anchor" href="#rollup-config-js" aria-hidden="true">#</a></h2><p>\u63A5\u4E0B\u6765\u5C31\u8981\u770B<code>rollup.config.js</code>\u4E86\uFF0C</p><div class="language-javascript"><pre><code><span class="token comment">// \u5F53\u6CA1\u6709TARGET\u65F6\u4F1A\u62A5\u9519\uFF0C\u901A\u8FC7\u4E0A\u9762\u7684\u914D\u7F6E\uFF0Crun dev \u4F20\u5165\u7684\u662F vue</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">TARGET</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;TARGET package must be specified via --environment flag.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u91CC\u90FD\u662F\u4E3A\u4E86\u83B7\u53D6\u9759\u6001\u6570\u636E, \u53EF\u4EE5\u5355\u72EC\u5F00\u4E00\u4E2A\u7EC8\u7AEF\uFF0C\u5C06\u8FD9\u4E9B\u4EE3\u7801\u5728\u7EC8\u7AEF\u91CC\u6267\u884C\u3002\u4F1A\u66F4\u52A0\u76F4\u89C2</span>
<span class="token keyword">const</span> masterVersion <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version   <span class="token comment">//package.json\u4E2D\u7684version </span>
<span class="token keyword">const</span> packagesDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;packages&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// packages\u8DEF\u5F84\uFF1A/vue-next/packages</span>
<span class="token keyword">const</span> packageDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>packagesDir<span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">TARGET</span><span class="token punctuation">)</span>  <span class="token comment">// /vue-next/packages/vue</span>
<span class="token comment">// resolve \u65B9\u6CD5\u57FA\u4E8Epath.resolve\u5C01\u88C5\uFF0C\u53EA\u662F\u56FA\u5B9A\u7B2C\u4E00\u4E2A\u53D8\u91CF\u4E3ApackageDir\uFF0C\u540E\u7EED\u5C31\u4E0D\u7528\u5173\u5FC3\u5F53\u524D\u76EE\u5F55\u662F\u54EA\u4E00\u4E2A\u3002\u7B80\u5355\u7684\u5C01\u88C5\uFF0C\u5F88\u5B9E\u7528\u3002</span>
<span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token parameter">p</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>packageDir<span class="token punctuation">,</span> p<span class="token punctuation">)</span>
<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">package.json</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u83B7\u53D6\u5230\u76EE\u6807\u76EE\u5F55\uFF08vue\uFF09\u7684package.json</span>
<span class="token keyword">const</span> packageOptions <span class="token operator">=</span> pkg<span class="token punctuation">.</span>buildOptions <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">// vue\u76EE\u5F55\u4E0B\u7684package.json</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> packageOptions<span class="token punctuation">.</span>filename <span class="token operator">||</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>packageDir<span class="token punctuation">)</span> <span class="token comment">// vue</span>

<span class="token keyword">let</span> hasTSChecked <span class="token operator">=</span> <span class="token boolean">false</span>

<span class="token keyword">const</span> outputConfigs <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5B9A\u4E49\u4E86\u4E0D\u540C\u547D\u4EE4\u7684\u8F93\u51FA</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> defaultFormats <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;esm-bundler&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cjs&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> inlineFormats <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">FORMATS</span> <span class="token operator">&amp;&amp;</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">FORMATS</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// [&#39;vue&#39;]</span>
<span class="token keyword">const</span> packageFormats <span class="token operator">=</span> inlineFormats <span class="token operator">||</span> packageOptions<span class="token punctuation">.</span>formats <span class="token operator">||</span> defaultFormats <span class="token comment">// [&#39;vue&#39;]</span>
<span class="token keyword">const</span> packageConfigs <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PROD_ONLY</span> <span class="token comment">// \u8FD9\u91CC\u7684\u73AF\u5883\u53D8\u91CF\u4E5F\u4F1A\u662Ffalse\uFF0CpackageConfigs\u5F97\u5230\u7684\u662F\u540E\u9762\u7684\u7ED3\u679C\u3002</span>
  <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u8FD9\u91CC\u4F20\u5165\u7684\u8F93\u51FA\u6587\u4EF6\u5DF2\u7ECF\u662F\u4E0A\u9762\u914D\u7F6E\u8FC7\u7684\u9759\u6001\u53D8\u91CF</span>
  <span class="token operator">:</span> packageFormats<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">format</span> <span class="token operator">=&gt;</span> <span class="token function">createConfig</span><span class="token punctuation">(</span>format<span class="token punctuation">,</span> outputConfigs<span class="token punctuation">[</span>format<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>e nv<span class="token punctuation">.</span><span class="token constant">N</span> <span class="token constant">ODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6B63\u5F0F\u6253\u5305\u4F1A\u6267\u884C\uFF0C\u6682\u65F6\u4E0D\u7BA1\u3002</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6700\u7EC8\u8FD4\u56DE packageConfigs </span>
<span class="token keyword">export</span> <span class="token keyword">default</span> packageConfigs 

<span class="token keyword">function</span> <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token parameter">format<span class="token punctuation">,</span> output<span class="token punctuation">,</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createReplacePlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createProductionConfig</span><span class="token punctuation">(</span><span class="token parameter">format</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">createMinifiedConfig</span><span class="token punctuation">(</span><span class="token parameter">format</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>\u770B\u4E0B\u6765\uFF0C\u5176\u5B9E\u4E2D\u8FD8\u662F\u6267\u884C <code>createConfig</code>\uFF0C\u5F97\u5230\u6700\u7EC8\u7684<code>packageConfigs</code></p><p>\u5FFD\u7565createConfig\u4E2D\u7684external\u3001plugin\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7CBE\u7B80\u4E0B createConfig</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">createConfig</span><span class="token punctuation">(</span><span class="token parameter">format<span class="token punctuation">,</span> output<span class="token punctuation">,</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>output<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5F53\u6CA1\u6709\u8F93\u51FA\u7684\u65F6\u5019\u62A5\u9519</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;chalk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">invalid format: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>format<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isGlobalBuild <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">global</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span>
  <span class="token keyword">const</span> isCompatPackage <span class="token operator">=</span> pkg<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;@vue/compat&#39;</span>
  <span class="token comment">// \u6DFB\u52A0\u8F93\u51FA\u5185\u5BB9</span>
  output<span class="token punctuation">.</span>exports <span class="token operator">=</span> isCompatPackage <span class="token operator">?</span> <span class="token string">&#39;auto&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;named&#39;</span>
  output<span class="token punctuation">.</span>sourcemap <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SOURCE_MAP</span>
  output<span class="token punctuation">.</span>externalLiveBindings <span class="token operator">=</span> <span class="token boolean">false</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isGlobalBuild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     output<span class="token punctuation">.</span>name <span class="token operator">=</span> packageOptions<span class="token punctuation">.</span>name
  <span class="token punctuation">}</span>
  
  <span class="token keyword">let</span> entryFile <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">runtime$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/runtime.ts</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">src/index.ts</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    input<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>entryFile<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u83B7\u53D6\u5230</span>
    output
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u770B\u5B8C\uFF0C\u5C31\u80FD\u4E86\u89E3\u5230<code>run dev</code>\uFF0C\u6700\u7EC8\u4F20\u9012\u7ED9rollup\u7684\u914D\u7F6E\u662F\u8FD9\u6837\u7684</p><div class="language-javascript"><pre><code><span class="token keyword">return</span> <span class="token punctuation">{</span>
    input<span class="token operator">:</span> <span class="token string">&#39;/vue-next/packages/vue/src/index.ts&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u83B7\u53D6\u5230</span>
    output<span class="token operator">:</span> <span class="token punctuation">{</span>
        file<span class="token operator">:</span> <span class="token string">&#39;/vue-next/packages/vue/dist/vue.global.js&#39;</span><span class="token punctuation">,</span>
        format<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">iife</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span>
        exports<span class="token operator">:</span> <span class="token string">&#39;named&#39;</span><span class="token punctuation">,</span>
        sourcemap<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        externalLiveBindings<span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u6837\u5BF9\u5982\u4F55\u6784\u5EFA\u672C\u5730<code>vue.global.js</code>\u7684\u5C31\u6709\u4E86\u4E00\u4E2A\u5927\u6982\u7684\u4E86\u89E3\uFF0C\u771F\u6B63\u7684\u6253\u5305\u5F53\u7136\u4E0D\u662F\u8FD9\u4E48\u7B80\u5355\u3002 \u56E0\u4E3A\u6211\u4EEC\u7684\u76EE\u6807\u8FD8\u662Fvue\u8BBE\u8BA1\u601D\u8DEF\u7684\u7406\u89E3\uFF0C\u6240\u4EE5\u6253\u5305\u5C31\u4E0D\u6DF1\u5165\u4E86\u3002</p>__VP_STATIC_END__`,19),e=[o];function c(u,l,k,i,r,g){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};
